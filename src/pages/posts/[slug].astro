---
import Layout from "@/layouts/Layout.astro";
import type { Post } from "../index.astro";
import BackIcon from "@/components/BackIcon.astro";
import { AstroSeo } from "@astrolib/seo";

export async function getStaticPaths() {
  const builderModel = import.meta.env.BUILDER_BLOGPOST_MODEL;
  const builderAPIpublicKey = import.meta.env.BUILDER_API_PUBLIC_KEY;
  const { results: posts }: { results: Post[] } = await fetch(
    `https://cdn.builder.io/api/v3/content/${builderModel}?${new URLSearchParams(
      {
        apiKey: builderAPIpublicKey,
        fields: ["data.slug", "data.title"].join(","),
        cachebust: "true",
      },
    ).toString()}`,
  )
    .then((res) => res.json())
    .catch((e) => console.log(e));
  return [
    ...posts.flatMap(({ data: { slug, title } }) => [
      {
        params: { slug },
        props: { title },
      },
    ]),
  ];
}
const { slug } = Astro.params;
const { title } = Astro.props;
const builderModel = import.meta.env.BUILDER_BLOGPOST_MODEL;
const builderAPIpublicKey = import.meta.env.BUILDER_API_PUBLIC_KEY;
const encodedUrl = encodeURIComponent("moot");
const { html: postHTML, data: postData } = await fetch(
  `https://cdn.builder.io/api/v1/qwik/${builderModel}?${new URLSearchParams({
    apiKey: builderAPIpublicKey,
    url: encodedUrl,
    "query.data.slug": slug,
    cachebust: "true",
  }).toString()}`,
)
  .then((res) => res.json())
  .catch();

const seoDescription =
  postData?.description || "Read more on Wcydtt blog about exciting topics!";
const seoImage =
  postData?.image || "https://www.wcydtt.co/images/default-og-image.jpg";
const seoTitle = `${title} | Wcydtt`;
---

<AstroSeo
  title={seoTitle}
  description={seoDescription}
  canonical={`https://www.wcydtt.co/blog/${slug}`}
  openGraph={{
    url: `https://www.wcydtt.co/blog/${slug}`,
    title: seoTitle,
    description: seoDescription,
    images: [
      {
        url: seoImage,
        width: 1200,
        height: 630,
        alt: `Image for ${title}`,
        type: "image/jpeg",
      },
    ],
    site_name: "Wcydtt",
  }}
  twitter={{
    handle: "@wcydtt",
    site: "@wcydtt",
    cardType: "summary_large_image",
  }}
/>

<Layout title=`Wcydtt | ${title}`>
  <div class="flex justify-center px-4 sm:px-6 lg:px-8">
    <div class="lg:prose-md prose prose-sm max-w-full py-6 sm:prose-base">
      <div class="flex flex-wrap justify-center gap-3"></div>

      <div class="mt-6">
        <Fragment set:html={postHTML} />
        <div class="mt-4 flex justify-center lg:justify-start">
          <BackIcon />
        </div>
      </div>
    </div>
  </div>
</Layout>
